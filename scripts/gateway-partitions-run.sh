#!/bin/sh

function installGatewayCRDs() {
    echo ">>> Installing Kubernetes Gateway API CRDs...."
    echo "++++++++++++++++++++++++++++++++++++++++++++++"
    kubectl apply -f https://github.com/envoyproxy/gateway/releases/download/v0.2.0-rc2/gatewayapi-crds.yaml | sed 's/^/      /'
    echo "++++++++++++++++++++++++++++++++++++++++++++++"
    echo ">>> Kubernetes Gateway API CRDs successfully installed."
}

function runNamespacedGateways() {
  echo ">>> Deploying namespaced Gateways..."
  kubectl apply -f "namespaced/two-namespaces/cluster.yaml"
  max=10
  for i in `seq 1 $max`
  do
    NAMESPACE="envoy-gateway-system-$i"
    kubectl apply -f - << EOF
      apiVersion: v1
      data:
        ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lFQXd6QjNqQU5CZ2txaGtpRzl3MEJBUXNGQURBck1SWXdGQVlEVlFRREV3MWwKYm5admVTMW5ZWFJsZDJGNU1SRXdEd1lEVlFRRkV3ZzFNVEUyTnpjeE1EQWVGdzB5TWpFd01EUXdPRFV4TkRKYQpGdzB5TXpFd01EVXdPRFV4TkRGYU1Dc3hGakFVQmdOVkJBTVREV1Z1ZG05NUxXZGhkR1YzWVhreEVUQVBCZ05WCkJBVVRDRFV4TVRZM056RXdNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXlHck4KK1YvVnl4eXllNnUwZEYxT1YwSnlqaWIxWGxQTW9TZ0NOSWJOaE1rbUVjYWR3T3hNYUgzc2V2aHNSM1g4N3gwYQplVlc0VzJ5MEdBd2ZLMUpHL096aUhpTk1PcDUybW9VcGsyTS8raEp0TlhlK2hXWkdlU2JEbDEzd1NCVWtuaWNOCkpzd0ovNmp2eTVoNzlyeDFDWFczdlVrSGE4amV6T1NDc1lBOEQraGdWS0hDWFZNMTZCZDE1RWdyaHJiZm5lQ08KTndObFlTbHM3TXN2b0hBakZ3L1JidWJtK2h5T2duQnNTNDNITE1seTZBTHFENmlxZHUwc0l1bExjYk85eFYzUApKR3QxMGdIUGNPUlJlblpoaTRBbGZvRmkremd3M1RCV3FTM0ZoTnJsL1FPUFh3aHBQekUybFV0dHpjQnZEWlpmCnZtZGpPRmFESnRMNm9aMlBLd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVWWhrZ0VVRFBFa3RPazJtODZwUDFueUF3SzBFd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBRDA5WXBncWE5YXNGbnJ0UG1RaU5ITVFzVVJBYjNjSWlFc0dZMlJmMnNFb2VJU0dKcE9lCmpkUDN1cXljdjAzUlNWMklrSXNLVzFUb3RqRHJDOVV6am1waDl3c2w3YTFLdjVQVDNua0NML2JsUzM4TnZwU0EKVEtLR3dmY0liQVplSUVzZHVBckl0dW94V0hDVkxvMmg5bXFLc3JtK2ZTemgvZDArYkxZL1QwQXpkcjJ1OCtiRQpHR1VpeWwyS3pQaENvNkNFVWloWW13dkhoUncvYnlOdEdnYnFKcjZlRmV3R25sa05CZXNMazJ5blRmdDdYL01oCkJSc1pXYm9QZXMwdWRnVmtMZUZLNFB3aTF2aDFSQ3h2SnkybFQvc3NLNFVseE93UGExazNaeE9XZjRGVkxBOGwKOXFaTnlGenI4a0NqTHk2N3RGeDdubWQzdW5xeW9Od2lRSTQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR0RENDQXB5Z0F3SUJBZ0lFRWFTRFlqQU5CZ2txaGtpRzl3MEJBUXNGQURBck1SWXdGQVlEVlFRREV3MWwKYm5admVTMW5ZWFJsZDJGNU1SRXdEd1lEVlFRRkV3ZzFNVEUyTnpjeE1EQWVGdzB5TWpFd01EUXdPRFV4TkRKYQpGdzB5TXpFd01EVXdPRFV4TkRGYU1CZ3hGakFVQmdOVkJBTVREV1Z1ZG05NUxXZGhkR1YzWVhrd2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDcVZHbXRRVGhSK3FGMzlUK2VvRnpYVjYxNGtPOUcKMS83bUludHVuVXREb2FFR2xXamQwcUprTnRCc2o3SENQZWMxMmVmZVltcnU0djV3Z3ZWK2t3QzdHZTlWRUtTSQpva2lqZ3pjR2t1cVJJTzNaK2c3bHcvUDVZTElDb2VRV0tITDZ1WWk5SnIrVFBPTXVwUlFDYzdKR3F0MmhEUW1KCmpJZ2RqZUpmSDJsaUg3bzcrNHF2WTd2cG5NdGc0VFM4SWMxbjhVbmdQWnpwK0txYUlTVUhHWTJwZ2tXYnhnSEcKc3hSM1NjcEVXRnBPTjB0OVBxSE5XQjB6VXFkWE5sMmVCc09rancrclk4Yktmdy9yUHpMb0llVHdKY0VuNUNyUQo4ZnJqdHBCQkx1ZU1nQ1VRbStxaTN6UE9vSEl4VUhSZUYrSVc2dzVjZFBkMExwMzlXRzBNaVZoNUFnTUJBQUdqCmdmSXdnZTh3RGdZRFZSMFBBUUgvQkFRREFnVHdNQjBHQTFVZERnUVdCQlRmNTk5T0xJNzBSaStyZlltUEZWWVMKOTV4T016QWZCZ05WSFNNRUdEQVdnQlJpR1NBUlFNOFNTMDZUYWJ6cWsvV2ZJREFyUVRDQm5BWURWUjBSQklHVQpNSUdSZ2cxbGJuWnZlUzFuWVhSbGQyRjVnaUpsYm5admVTMW5ZWFJsZDJGNUxtVnVkbTk1TFdkaGRHVjNZWGt0CmMzbHpkR1Z0Z2labGJuWnZlUzFuWVhSbGQyRjVMbVZ1ZG05NUxXZGhkR1YzWVhrdGMzbHpkR1Z0TG5OMlk0STAKWlc1MmIza3RaMkYwWlhkaGVTNWxiblp2ZVMxbllYUmxkMkY1TFhONWMzUmxiUzV6ZG1NdVkyeDFjM1JsY2k1cwpiMk5oYkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWpCaFdoZVlsd0VCWEhXNkZZTFJjU2kvK0xXUE1nU1AvCmpLZllMVis4eUxzV2N1RG5FRjRGczdkdDUvNVhwYUkzWkUwd2Y4Wm00R2M2SksvVTNYK2x3VUlRQW1LcnRLaHUKVy9wRXJPdHQyak9kQVI2QlVxNWVBUG1IaFZmOHp1M1hOZ0lXZzA3WnNPcE4vKzB4R0dFWm9xWUtwZ0tHdFh2VwpYbXB4QWlTeXZLV2Y0b0RXRlQ0djRyejV1OFpjcnVZTXhtckU3T3JWZ3pSWHN4ZjZQenljczdjNXRubEJMMUZ1CnJVWmRSUHg2SXFpWGhyc2t6Y1hWaEJpcDIvZmJ1K1k3TVVGZ2xNeWJkNitlMVRmNEdvQW9VMlBZdlpxRC9IcWoKdFFUSFVka0NTdHVIcUZ1TzJsUFFwWllZRC8xMGdEUzZrMmFGQk5FSzRaVXM5QjBsbU5CQWhRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
        tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcWxScHJVRTRVZnFoZC9VL25xQmMxMWV0ZUpEdlJ0Zis1aUo3YnAxTFE2R2hCcFZvCjNkS2laRGJRYkkreHdqM25OZG5uM21KcTd1TCtjSUwxZnBNQXV4bnZWUkNraUtKSW80TTNCcExxa1NEdDJmb08KNWNQeitXQ3lBcUhrRmloeStybUl2U2Eva3p6akxxVVVBbk95UnFyZG9RMEppWXlJSFkzaVh4OXBZaCs2Ty91SwpyMk83Nlp6TFlPRTB2Q0hOWi9GSjREMmM2ZmlxbWlFbEJ4bU5xWUpGbThZQnhyTVVkMG5LUkZoYVRqZExmVDZoCnpWZ2RNMUtuVnpaZG5nYkRwSThQcTJQR3luOFA2ejh5NkNIazhDWEJKK1FxMFBINjQ3YVFRUzduaklBbEVKdnEKb3Q4enpxQnlNVkIwWGhmaUZ1c09YSFQzZEM2ZC9WaHRESWxZZVFJREFRQUJBb0lCQUdnczFyRnJpVm5DYzQxZAp4enBxbEQzMDF4azljOHNkZ2o0WTZ1dGRjdEg3Z2ZQMzM3cUVBR1JRaml0SHU0MjB0THZmK1l1dkgvM1pnWXNvCjNhTTduNS9QbmV5bUVDdXRMY1lzRTdTR21NYUlvRkRJT3VKV2RkcVpSR2FOdzJXMStaVFZjd2RWTXFpSC9kN2kKZ2hsNXo1aWZHb3hNMy85cm56aU1OZDY5NUlOcEtvbXBoM2cvMGRqVEpOZWxDRmJ5Z1BML01SV0pkcXc4ZVd3MAplbzVIcmFBZkFNT0RWSGlxY1M1QWhtTmVzWktNTkhsdFdZdEY4ckhqcUcvTUxpTFRXYW9Ya1R3dmNiN2ovT0hkCmlSK2tuUk51ZnZhc0Q5eXk0VEVDU3l2eHhsMVhtQm5tbmVTam5XU2hIeFh3Vy9HTFNSdkJQeE5CTGwzQXBKZHMKZmxVY25vRUNnWUVBMjV2Z0tSSWdoQkpha0dYSlloemRCOGR0cXVCQng4V2N2V09LeWxlbFdXTGwyR0g3MHVLRQpJV0lnYk1Kdm9LeHpRMnFMeGlYMFJiY1FkWjVnL1ZSWm40STRCOFUxZGdRaW9PSTdTempzTXlJMnhRQkNxQ3ljClE0TVM2Z0FqSkJNTEE1amRmWUpkRXI0ZmtoRzRDN0x6Snplb25Pak5saWd2aXRUdStkSmtKZ2tDZ1lFQXhvNEwKZUpoaG1Xblk3eWlob1RPZFdCUU1ySDJRRmptVExqZzNjVHRzcEpUb2x1QjIwU3AxRTdicUN2OXJ3WW1Db3pKYgo0SWttNlpFNiswUUVGVFNGTTZISGxydmowaWx0ZC9paGJZWWh3Y1ZneG05UEovdkw3ZWlEbzAxSWhtM2RxT2lKCkhnNnk1ZTJTTGRML0NjdEVjVUIyck5IYzlGdkl6RTJIK1ZObnV2RUNnWUFZaXNiMlVBeEtOakxneUQ5Rk02eVAKM2Yybmh3QlM3d2FoTTZxakNrQjBTTlVlNVhSYkVPMXJQYWdaLzNDeUtCT0ppVEt0cGpneVFrOFlsZWFJNlJCSwoveVo3MTlJdHFqQ2tnaVBXT0RwTlRKbUtVb2tnZWp2TVg2MlJjUXA4VVpSOWhtdmFSdU5YNE45dVY0U1Y2aDI2CldFSURweEN5b3pNTTlOYndIRThNNFFLQmdFYjhKWEc1MkxyR01yNWQ0bHNGWHUxTVRiT2xPRXdaelZxcTBuZHkKN1VaeHppMlNsaWYxYStIZWRSSDFld3E0SkxJL29NVkhnMWZoaWhxbW1HY1VYY0sxeGV0SHhRMHZybWxEeEVLcAp2NHZOQ3VvbWhVQWdMeW9oQkY3dmxFd3JIeUh4OElPRWNjVHVDR0xGbWxSZ0RWb0gxK1cxS2E5YTJSRGhid2xlCkhpbWhBb0dCQU1WMFJ6RmNIa1lVZlJ5aXV6ZndJZVVYOUNiYm9FTUczOWh5anFyWlBnZUY3dngzcWp2TjN1dngKQllQdGVkMXQ5VTdOckdYanh3N1FNelZqOFAwRFZjd1NkeklwQlF0WDhUUldvY2grRTk2c0tpZWVmdHpLWW9LYgpnQStVbTlTRElTRnk2MW1HNUlnelNpTXI0ejNjQTh3YU1sMlpkQVRNWHpEMVRVMnBReXZKCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
      kind: Secret
      metadata:
        labels:
          control-plane: envoy-gateway
        name: envoy-gateway
        namespace: $NAMESPACE
      type: kubernetes.io/tls
EOF

    kubectl apply -f - << EOF
      apiVersion: v1
      data:
        ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lFQXd6QjNqQU5CZ2txaGtpRzl3MEJBUXNGQURBck1SWXdGQVlEVlFRREV3MWwKYm5admVTMW5ZWFJsZDJGNU1SRXdEd1lEVlFRRkV3ZzFNVEUyTnpjeE1EQWVGdzB5TWpFd01EUXdPRFV4TkRKYQpGdzB5TXpFd01EVXdPRFV4TkRGYU1Dc3hGakFVQmdOVkJBTVREV1Z1ZG05NUxXZGhkR1YzWVhreEVUQVBCZ05WCkJBVVRDRFV4TVRZM056RXdNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXlHck4KK1YvVnl4eXllNnUwZEYxT1YwSnlqaWIxWGxQTW9TZ0NOSWJOaE1rbUVjYWR3T3hNYUgzc2V2aHNSM1g4N3gwYQplVlc0VzJ5MEdBd2ZLMUpHL096aUhpTk1PcDUybW9VcGsyTS8raEp0TlhlK2hXWkdlU2JEbDEzd1NCVWtuaWNOCkpzd0ovNmp2eTVoNzlyeDFDWFczdlVrSGE4amV6T1NDc1lBOEQraGdWS0hDWFZNMTZCZDE1RWdyaHJiZm5lQ08KTndObFlTbHM3TXN2b0hBakZ3L1JidWJtK2h5T2duQnNTNDNITE1seTZBTHFENmlxZHUwc0l1bExjYk85eFYzUApKR3QxMGdIUGNPUlJlblpoaTRBbGZvRmkremd3M1RCV3FTM0ZoTnJsL1FPUFh3aHBQekUybFV0dHpjQnZEWlpmCnZtZGpPRmFESnRMNm9aMlBLd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVWWhrZ0VVRFBFa3RPazJtODZwUDFueUF3SzBFd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBRDA5WXBncWE5YXNGbnJ0UG1RaU5ITVFzVVJBYjNjSWlFc0dZMlJmMnNFb2VJU0dKcE9lCmpkUDN1cXljdjAzUlNWMklrSXNLVzFUb3RqRHJDOVV6am1waDl3c2w3YTFLdjVQVDNua0NML2JsUzM4TnZwU0EKVEtLR3dmY0liQVplSUVzZHVBckl0dW94V0hDVkxvMmg5bXFLc3JtK2ZTemgvZDArYkxZL1QwQXpkcjJ1OCtiRQpHR1VpeWwyS3pQaENvNkNFVWloWW13dkhoUncvYnlOdEdnYnFKcjZlRmV3R25sa05CZXNMazJ5blRmdDdYL01oCkJSc1pXYm9QZXMwdWRnVmtMZUZLNFB3aTF2aDFSQ3h2SnkybFQvc3NLNFVseE93UGExazNaeE9XZjRGVkxBOGwKOXFaTnlGenI4a0NqTHk2N3RGeDdubWQzdW5xeW9Od2lRSTQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLakNDQWhLZ0F3SUJBZ0lFRm5FRW5qQU5CZ2txaGtpRzl3MEJBUXNGQURBck1SWXdGQVlEVlFRREV3MWwKYm5admVTMW5ZWFJsZDJGNU1SRXdEd1lEVlFRRkV3ZzFNVEUyTnpjeE1EQWVGdzB5TWpFd01EUXdPRFV4TkRKYQpGdzB5TXpFd01EVXdPRFV4TkRGYU1Bd3hDakFJQmdOVkJBTU1BU293Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBCkE0SUJEd0F3Z2dFS0FvSUJBUURBRy80Q1B5Lzl1TDZURU9weXhCQ3JaOG9XZ0x3MWtQZWU3ZTk1QURNY2ZEekMKUHI1b2E2MmlCeUs4aGJ4UmNxOUFZTnhoNjRvbzBGZ21qL2ttWnhLWGRqTFF5ZHh5VzlYVDFFelN4SHFOZUZ5TwpLM0FJejc4YWNLSmVUMTlSdHRVWWhobXJaL3JiUFZzbGduTi9KYVNlWE1XSVdYQTlQMzJjLytvd004ZllXTWwwCmI2S2M1cFhTanRGZCt0RTl1dEp4WDBBWE9qZ2Y4OXhZekJTWDdMY0Rmb25QMW1iTk1VMXFYWkFqVXRnOGI0TmgKNTBQUWx4N2hDbktkNzlNYUFHRUdFaXJCWTRXeWh1aGJQdTdLUFVBVDdhVEN0ditId0pLYzBLV2pabWJSeDZySQowR1VnN0I1MjhXOXdDYm5yYTRMNXVWc2NjVmZZV0hHalliTktDMUZKQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCCi93UUVBd0lFOERBZEJnTlZIUTRFRmdRVW9xT3QwbHczOUxBRWVOOERRNDhkMmQ1WCtPb3dId1lEVlIwakJCZ3cKRm9BVVloa2dFVURQRWt0T2sybTg2cFAxbnlBd0swRXdJUVlEVlIwUkJCb3dHSUlXS2k1bGJuWnZlUzFuWVhSbApkMkY1TFhONWMzUmxiVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBR2RJKy93dnlUSkVmMUk4ZWZiY0Z1anVtCjFQSWtSY2hiS21jYmp1Z3Jpb2hoU1ZIbkRId0RDMHVBTWtNUVhHQlZla2FVVm01QS9PMVNUaHpsd25TeEE2bkIKdVg2NTVMdVZXRDdhQmw0NFlzMHp5VHNCZUw3aUVQR2tyYWR2RFhqdjRZL0hJNW0wQUZWeXlzNzlybzVFRGFHdgpHL0tCQXQ1eFpodHFIdmw5UStYMjI2VjBqM2ZKOEF6dEljWEtwWHl4WmFYOXkwcDE2bUFSQ2w4OG82ZFhSVU42CjlmMzRBck1YQ0hUelc1c0k5bnBja3RLY3dDZ2NXWXR2Yi9NdjBHZXJzaUFVTllHOStPZ2dZYjlkTTk5aXZidFIKaDByUUQwa3BpaUdqZmJta2tXN1JpMUozeEZLT0pLcWl3M3BmZG1MT3JFdGxaVjI0dWtEVkNncjZwdjN2Znc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd0J2K0FqOHYvYmkra3hEcWNzUVFxMmZLRm9DOE5aRDNudTN2ZVFBekhIdzh3ajYrCmFHdXRvZ2NpdklXOFVYS3ZRR0RjWWV1S0tOQllKby81Sm1jU2wzWXkwTW5jY2x2VjA5Uk0wc1I2alhoY2ppdHcKQ00rL0duQ2lYazlmVWJiVkdJWVpxMmY2MnoxYkpZSnpmeVdrbmx6RmlGbHdQVDk5blAvcU1EUEgyRmpKZEcraQpuT2FWMG83UlhmclJQYnJTY1Y5QUZ6bzRIL1BjV013VWwreTNBMzZKejlabXpURk5hbDJRSTFMWVBHK0RZZWRECjBKY2U0UXB5bmUvVEdnQmhCaElxd1dPRnNvYm9Xejd1eWoxQUUrMmt3cmIvaDhDU25OQ2xvMlptMGNlcXlOQmwKSU93ZWR2RnZjQW01NjJ1QytibGJISEZYMkZoeG8yR3pTZ3RSU1FJREFRQUJBb0lCQUgxcWlPU3NuY2NWY2cwTwo4UkFsb2dCVXpPRHVBSEUwQ0FTUXIxTWVaei9FZCtJVUZqaVRlNUtZOS90OWo1all0MExmT1dFUDVXMkp2dExHCkVWRVozMUJVVVE1dmltUjZRZGw5OHYxeVdkTzc3U2kvZ08rdnVNSXBJRWRUcUJYdnQ2Uy8vMGdncE91MlhhZmEKUjA2Tm82L2pQdTRwL1pWdXVySGhmT0VsSE9YR3gxZG9zalJsUWpMM1dtbCt2bU9JVU9IRlBHKzlQWUw5bGwvegpubXlnMlgyQXRYYU91MzNvRWg5ZTdtZElmbkkzM1RzWTN4WXFxZ29YNDVFWG9XVnNja3RKNG5VenM4UEFhOWp5Ci9nUDcrSk8ySDIwQisxN2hHYmgvVWFCWllyVTRCaVAyWjh1eE9Mckc5Ui95QTd2czAxSXc4YzRsazlzQXJmbWEKQll1STZVVUNnWUVBNWVDN3duZFMzZWxpZTQxTkVpQTNrMlBXWTA0YUVoVVJnd1R3VytQV1Fxc1NQeWVMa0tmWgpsZzUwRzZKUU42NDRDSTY0MnhDQjZZa1NySEIvZExLSktpM1VRVUhIckp4MWVURzROaVhVZjE3R255TVJsaDhwCk9GYzBjNG05YmJZSHp4dkhsSy9Yb1prWDk1SWRxZ2ppaEtFS0QrekVySEo2NjhRaFl6ZklHZnNDZ1lFQTFmQ04KaXM0UG0zUFJQZGkycG9vdlg5cDNMaVJrZENMMGIwRG5KRDNpUjBuSzJvUEsyZVpOMlhTd1cxZXFZU20vWERoVQpoRElyZ0ZYSXkySVhlM3V5VHR1UlN0a1Q0eVEvWnJHSHIwN3BrbmE2dHl5bURMbjMvSzBJZHZXUmJaUG5ZRmlXClhYYkp3S1FBK0tSdXh3WjhidEtIZXVwUmpGaTNjZGFEOWRVUHdvc0NnWUFvTkVQaVlRZ25NNWc3ejV5NUhOVmIKZTh5VkZhWE5uODJ1UW9EZk1WdlowUjJoMmdLNHpBSnNFaDhRYmpUbGFCejRzaTEyY3M2bHo0bHFpMHBmV0pKUQp4QzhwTXAzL2ZHVzNTcERUTjQ2UXNEekF2RnRwREE0amdtejBBQlVYU1F6WWxoMHp6Z1ZDaUFuL0RKa1BrZm84CkJBWkVmcjV2QXA2bytXWjFlZDRQWFFLQmdIOWdsaVdLd3FnZnNQbE55cElsdkVjcDM4UE5UeklHamRxZm5mOXEKQ1F2QTE5SjZuWkJYR3dyWit4YW5mMzRTU1Nrek1MNzAwQW05Q2F4dVh1VGFwVE5tYjM5TStCWkpRcVoyRlA4LwowTG12ajBQNGhYVVdWSnhRdWJWNlNIZ2hrNlU5bVdsVWpKTHlFdEgzdFMweW8ydW9WWm5OWVhoYWFmNlJaa2c3Cjd3STVBb0dCQU5wNytCNExObGFLQ3Rvd2NJT0N2R1F3Z0N5ZWNqd1ZaMzNEUlZLeUVkbVVKRldrYXVJUXhXZ2YKdVpHR1NnTVZjM3U5QXhacTFGVCtvSWZNeUZNVXF2NDJwY2NMK0hYZWIrTmJEajVSRFduMEJWL1N2V1EvYlE2TQpuVEN3VkRKUHRldzNCM3k5RXdyK2RJVVZldmtCQWt4aDlYTnBqL2h0VFR0OUMzVTZJdnA5Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
      kind: Secret
      metadata:
        labels:
          control-plane: envoy-gateway
        name: envoy
        namespace: $NAMESPACE
      type: kubernetes.io/tls
EOF
    echo $NAMESPACE
    echo $(date -u)
    kubectl apply -f "namespaced/two-namespaces/envoy-gateway-$i.yaml"
  done
}

function runProxies() {
  echo ">>> Deploying proxies"
  max=10
  for i in `seq 1 $max`
  do
    NAMESPACE="envoy-gateway-system-$i"
    kubectl apply -f "namespaced/gateways/gateway-$i.yaml"
  done
}

function deployServices() {
    echo ">>> Deploying services"
    max=10
    for i in `seq 1 $max`
    do
      kubectl apply -f "namespaced/services/service-$i.yaml"
    done
}

function deployHttpRoutes() {
  echo ">>> Deploying Http Routes"
  NAMESPACE="$1"
  n=1000
  for j in `seq 101 $n`
  do
    NAME="httpbin$j"
    kubectl apply -f - << EOF
    apiVersion: gateway.networking.k8s.io/v1alpha2
    kind: HTTPRoute
    metadata:
      name: $NAME
      namespace: $NAMESPACE
    spec:
      parentRefs:
        - name: eg
      hostnames:
        - "www.$NAME$NAMESPACE.com"
      rules:
        - backendRefs:
            - group: ""
              kind: Service
              name: httpbin
              port: 80
              weight: 1
          matches:
            - path:
                type: PathPrefix
                value: /abc
            - path:
                type: PathPrefix
                value: /def
            - path:
                type: PathPrefix
                value: /ghi
            - path:
                type: PathPrefix
                value: /jkl
            - path:
                type: PathPrefix
                value: /mno
            - path:
                type: PathPrefix
                value: /pqr
            - path:
                type: PathPrefix
                value: /stu
            - path:
                type: PathPrefix
                value: /vwx
EOF
  done
}

function deployHttpRoutesConcurrently() {
  max=10
  for i in `seq 1 $max`
  do
    NAMESPACE="envoy-gateway-system-$i"
    deployHttpRoutes $NAMESPACE & 
  done
}

function testFor() {
  max=110
  for i in `seq 101 $max`
  do
    echo $i
  done 
}

# --------------------------------

# installGatewayCRDs
# deployServices
# runProxies
# deployHttpRoutes
runNamespacedGateways

# deployHttpRoutesConcurrently
